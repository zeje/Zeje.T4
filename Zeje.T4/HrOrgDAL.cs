//------------------------------------------------------------------------------
// <auto-generated>
// 自动生成类（请不要随意改变生成文件的内容，会被覆盖，请使用分部类实现对类的修改）
// 创建人：Zeje
// 创建时间：2016-3-28
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Dapper;
using Zeje.DBUtility;
using Zeje.Model;

namespace Zeje.DAL
{
    /// <summary>组织架构表
    /// </summary>
    public partial class HrOrgDAL
    {
        /// <summary>添加对象
        /// </summary>
        /// <param name="model"></param>
        /// <returns></returns>       
        public int Add(HrOrg model)
        {
            StringBuilder query = new StringBuilder();
            query.Append(@"
INSERT INTO HrOrg
(
orgCode,
orgName,
parentOrgCode,
remark,
addPerson,
addTime,
updatePerson,
updateTime,
deletePerson,
deleteTime
)
VALUES 
(
@orgCode,
@orgName,
@parentOrgCode,
@remark,
@addPerson,
@addTime,
@updatePerson,
@updateTime,
@deletePerson,
@deleteTime
)
");
            var args = new DynamicParameters();
            args.Add("@orgCode", model.orgCode);
            args.Add("@orgName", model.orgName);
            args.Add("@parentOrgCode", model.parentOrgCode);
            args.Add("@remark", model.remark);
            args.Add("@addPerson", model.addPerson);
            args.Add("@addTime", model.addTime);
            args.Add("@updatePerson", model.updatePerson);
            args.Add("@updateTime", model.updateTime);
            args.Add("@deletePerson", model.deletePerson);
            args.Add("@deleteTime", model.deleteTime);
            query.Append(@" SELECT @returnid=SCOPE_IDENTITY() ");
            args.Add("@returnid", dbType: DbType.Int32, direction: ParameterDirection.Output);
            using (DbBase db = new DbBase())
            {
                int rows = db.DbConnecttion.Execute(query.ToString(),args);
                if(rows > 0)
                {
                    model.Id = args.Get<int>("@returnid");
                }
                return rows;
            }
        }

        /// <summary>更新对象
        /// </summary>
        /// <param name="model"></param>
        /// <param name="where"></param>
        /// <returns></returns>       
        public int Update(HrOrg model,string where)
        {
            StringBuilder query = new StringBuilder();
            query.Append(@"
UPDATE HrOrg SET 
orgCode= @orgCode,
orgName= @orgName,
parentOrgCode= @parentOrgCode,
remark= @remark,
addPerson= @addPerson,
addTime= @addTime,
updatePerson= @updatePerson,
updateTime= @updateTime,
deletePerson= @deletePerson,
deleteTime= @deleteTime
");
            query.Append(" where " + where );

            using (DbBase db = new DbBase())
            {
                return db.DbConnecttion.Execute(query.ToString(), model);
            }
        }

        /// <summary>删除
        /// </summary>
        /// <param name="where"></param>
        /// <param name="param"></param>
        /// <returns></returns>       
        private int Delete(string where,object param)
        {
            StringBuilder query = new StringBuilder();
            query.Append(@" delete from HrOrg ");
            query.Append(" where " + where );

            using (DbBase db = new DbBase())
            {
                return db.DbConnecttion.Execute(query.ToString(), param);
            }
        }

        /// <summary>查询(单个实体)
        /// </summary>
        /// <param name="where"></param>
        /// <param name="param"></param>
        /// <param name="orderby"></param>
        /// <returns></returns>       
        public HrOrg GetModel(string where,object param,string orderby = "")
        {
            StringBuilder query = new StringBuilder();
            query.Append(@" select * from HrOrg ");
            if(!string.IsNullOrEmpty(where))
            {
                query.Append(" where ");
                query.Append( where );
            }

            if(!string.IsNullOrEmpty(orderby))
            {
                query.Append(" order by " + orderby );
            }

            using (DbBase db = new DbBase())
            {
                return db.DbConnecttion.Query<HrOrg>(query.ToString(), param).SingleOrDefault();
            }
        }

        /// <summary>查询（多个）
        /// </summary>
        /// <param name="where"></param>
        /// <param name="param"></param>
        /// <param name="orderby"></param>
        /// <returns></returns>       
        public List<HrOrg> GetList(string where,object param,string orderby = "")
        {
            StringBuilder query = new StringBuilder();
            query.Append(@" select * from HrOrg ");
            if(!string.IsNullOrEmpty(where))
            {
                query.Append(" where ");
                query.Append( where );
            }

            if(!string.IsNullOrEmpty(orderby))
            {
                query.Append(" order by " + orderby );
            }

            using (DbBase db = new DbBase())
            {
                return db.DbConnecttion.Query<HrOrg>(query.ToString(), param).ToList();
            }
        }

        /// <summary>查询（所有）
        /// </summary>
        /// <returns></returns>       
        public List<HrOrg> GetALL()
        {
            StringBuilder query = new StringBuilder();
            query.Append(@" select * from HrOrg ");

            using (DbBase db = new DbBase())
            {
                return db.DbConnecttion.Query<HrOrg>(query.ToString()).ToList();
            }
        }
    }
}
