<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ include file="EF.Utility.CS.ttinclude"#>
<#@ assembly name="$(SolutionDir)\Zeje.T4_\bin\Debug\Zeje.T4_.dll" #>
<#@ import namespace="Zeje.T4_" #>
<#@ assembly name="$(TargetDir)\MySql.Data.dll" #>
<#@ import namespace="MySql.Data" #>
<#@ import namespace="MySql.Data.MySqlClient" #>


<#
    var	fileManager = EntityFrameworkTemplateFileManager.Create(this);
    fileManager.StartHeader();
#>
//------------------------------------------------------------------------------
// <auto-generated>
// 自动生成类（请不要随意改变生成文件的内容，会被覆盖，请使用分部类实现对类的修改）
// 创建人：Zeje
// 创建时间：2016-3-28
// </auto-generated>
//------------------------------------------------------------------------------
<#
    fileManager.EndBlock();
    
    SchemaReaderFactory srf = new SchemaReaderFactory();

	srf.ConnectionString = "User ID=root;Password=admintest123456;Host=47.105.237.32;Port=5882;Database=QXDatabaseDEV";
    srf.ProviderName = "MySql.Data.MySqlClient";
	srf.RemoveTablePrefixes = new string[] { "tbl_", "tb_", "t_" , "b_" , "dt_"};
	var lstTable = srf.LoadTables();
	var strModelNamespace = "QXDataExchanges.Models";
	var strDALNamespace = "Zeje.DAL";
	var strBLLNamespace = "Zeje.BLL";
#>
<#
	if (lstTable.Count>0)
	{
        for(int i = 0; i < lstTable.Count; i++)
        {
            DBTable tbl = lstTable[i];
			if(tbl.Ignore) continue;
            
#>
<#
    fileManager.StartNewFile(Utils.CamelName(tbl.ClassName) + "DO.cs");
#>
using Chloe.Annotations;
using System;
using System.Collections.Generic;
using System.Text;

namespace <#= strModelNamespace #>
{
    /// <summary>
	/// <#= Utils.FormatComment(tbl.Comment) #>
    /// </summary> 
	[Table("<#=tbl.Name#>")]
    public partial class <#=Utils.CamelName(tbl.ClassName)#>DO : Base<#= Id(tbl) #>DO
    {
<# 
foreach(DBColumn col in tbl.Columns)
{
	if(col.Ignore) continue;
	if(col.Name.ToLower() == "id") continue;
#>
		/// <summary>
		///<#= Utils.FormatComment(col.Comment)#>
		/// </summary>  
		public <#=col.PropertyType #><#=Utils.CheckNullable(col)#> <#=Utils.CamelName(col.PropertyName) #> { get; set; }
<#
}
#>
    }
}
<# 
            fileManager.EndBlock();
        }
    }

    fileManager.Process(true); 
#>
<#+ 
	public string Id(DBTable tbl){
		return tbl.Columns.Any(c=>c.Name.ToLower() == "id")?"Id":"";
	}
#>