<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ include file="EF.Utility.CS.ttinclude"#>
<#@ assembly name="$(SolutionDir)\Zeje.T4_\bin\Debug\Zeje.T4_.dll" #>
<#@ import namespace="Zeje.T4_" #>
<#
    var	fileManager = EntityFrameworkTemplateFileManager.Create(this);
    fileManager.StartHeader();
#>
//------------------------------------------------------------------------------
// <auto-generated>
// 自动生成类（请不要随意改变生成文件的内容，会被覆盖，请使用分部类实现对类的修改）
// 创建人：Zeje
// 创建时间：2016-3-28
// </auto-generated>
//------------------------------------------------------------------------------
<#
    fileManager.EndBlock();

    SchemaReaderFactory srf = new SchemaReaderFactory();

    srf.ConnectionString = "server=localhost;uid=sa;pwd=123456;database=Zeje.Hr;";
    srf.ProviderName = "System.Data.SqlClient";
    
	var lstTable = srf.LoadTables();
	var strDBUtilityNamespace = "Zeje.DBUtility";
    var strModelNamespace = "Zeje.Model";
	var strDALNamespace = "Zeje.DAL";
	var strBLLNamespace = "Zeje.BLL";
#>
<#
	if (lstTable.Count>0)
	{
        for(int i = 0; i < lstTable.Count; i++)
        {
            DBTable tbl = lstTable[i];
            if(tbl.Name.StartsWith("dt_"))
            {
                continue;
            }
            fileManager.StartNewFile(tbl.Name + "DAL.cs");
#>
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Dapper;
using <#= strDBUtilityNamespace #>;
using <#= strModelNamespace #>;

namespace <#= strDALNamespace #>
{
    /// <summary><#= tbl.Comment #>
    /// </summary>
    public partial class <#=tbl.Name#>DAL
    {
        /// <summary>添加对象
        /// </summary>
        /// <param name="model"></param>
        /// <returns></returns>       
        public int Add(<#= tbl.Name#> model)
        {
            StringBuilder query = new StringBuilder();
            query.Append(@"
INSERT INTO <#=tbl.Name#>
(
<#=string.Join("," + Environment.NewLine,tbl.Columns.Where(it=> !it.IsAutoIncrement).Select(it=> it.Name))#>
)
VALUES 
(
<#=string.Join("," + Environment.NewLine,tbl.Columns.Where(it=> !it.IsAutoIncrement).Select(it=> "@" + it.Name))#>
)
");
            var args = new DynamicParameters();
<#
            foreach(string name in tbl.Columns.Where(it=> !it.IsAutoIncrement).Select(it=> it.Name))
            {
#>
            args.Add("@<#= name #>", model.<#= name #>);
<#
            }
#>
<#
            if(tbl.Columns.Any(it=> it.IsAutoIncrement))
            {
#>
            query.Append(@" SELECT @returnid=SCOPE_IDENTITY() ");
            args.Add("@returnid", dbType: DbType.Int32, direction: ParameterDirection.Output);
            using (DbBase db = new DbBase())
            {
                int rows = db.DbConnecttion.Execute(query.ToString(),args);
                if(rows > 0)
                {
<#
                var colAutoIncrement = tbl.Columns.Where(it=> it.IsAutoIncrement).FirstOrDefault();
#>
                    model.<#= colAutoIncrement.Name #> = args.Get<int>("@returnid");
                }
                return rows;
            }
<#
            }
            else
            {
#>
            using (DbBase db = new DbBase())
            {
                return db.DbConnecttion.Execute(query.ToString(), args);
            }
<#
            }
#>
        }

        /// <summary>更新对象
        /// </summary>
        /// <param name="model"></param>
        /// <param name="where"></param>
        /// <returns></returns>       
        public int Update(<#= tbl.Name#> model,string where)
        {
            StringBuilder query = new StringBuilder();
            query.Append(@"
UPDATE <#=tbl.Name#> SET 
<#=string.Join("," + Environment.NewLine,tbl.Columns.Where(it=> !it.IsAutoIncrement).Select(it=> it.Name + "= @" + it.Name))#>
");
            query.Append(" where " + where );

            using (DbBase db = new DbBase())
            {
                return db.DbConnecttion.Execute(query.ToString(), model);
            }
        }

        /// <summary>删除
        /// </summary>
        /// <param name="where"></param>
        /// <param name="param"></param>
        /// <returns></returns>       
        private int Delete(string where,object param)
        {
            StringBuilder query = new StringBuilder();
            query.Append(@" delete from <#=tbl.Name#> ");
            query.Append(" where " + where );

            using (DbBase db = new DbBase())
            {
                return db.DbConnecttion.Execute(query.ToString(), param);
            }
        }

        /// <summary>查询(单个实体)
        /// </summary>
        /// <param name="where"></param>
        /// <param name="param"></param>
        /// <param name="orderby"></param>
        /// <returns></returns>       
        public <#= tbl.Name#> GetModel(string where,object param,string orderby = "")
        {
            StringBuilder query = new StringBuilder();
            query.Append(@" select * from <#=tbl.Name#> ");
            if(!string.IsNullOrEmpty(where))
            {
                query.Append(" where ");
                query.Append( where );
            }

            if(!string.IsNullOrEmpty(orderby))
            {
                query.Append(" order by " + orderby );
            }

            using (DbBase db = new DbBase())
            {
                return db.DbConnecttion.Query<<#= tbl.Name#>>(query.ToString(), param).SingleOrDefault();
            }
        }

        /// <summary>查询（多个）
        /// </summary>
        /// <param name="where"></param>
        /// <param name="param"></param>
        /// <param name="orderby"></param>
        /// <returns></returns>       
        public List<<#= tbl.Name#>> GetList(string where,object param,string orderby = "")
        {
            StringBuilder query = new StringBuilder();
            query.Append(@" select * from <#=tbl.Name#> ");
            if(!string.IsNullOrEmpty(where))
            {
                query.Append(" where ");
                query.Append( where );
            }

            if(!string.IsNullOrEmpty(orderby))
            {
                query.Append(" order by " + orderby );
            }

            using (DbBase db = new DbBase())
            {
                return db.DbConnecttion.Query<<#= tbl.Name#>>(query.ToString(), param).ToList();
            }
        }

        /// <summary>查询（所有）
        /// </summary>
        /// <returns></returns>       
        public List<<#= tbl.Name#>> GetALL()
        {
            StringBuilder query = new StringBuilder();
            query.Append(@" select * from <#=tbl.Name#> ");

            using (DbBase db = new DbBase())
            {
                return db.DbConnecttion.Query<<#= tbl.Name#>>(query.ToString()).ToList();
            }
        }
    }
}
<# 
            fileManager.EndBlock();
        }
    }

    fileManager.Process(true); 
#>